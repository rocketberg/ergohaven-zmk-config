#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        kha {
            bindings = <&kp LBKT>;
            key-positions = <6 7>;
        };

        hrdsgn {
            bindings = <&kp RBKT>;
            key-positions = <7 8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
  &kp Q  &kp W  &kp E  &kp R          &kp T                          &kp Y  &kp U  &kp I      &kp O    &kp P
  &kp A  &kp S  &kp D  &kp F          &kp G                          &kp H  &kp J  &kp K      &kp L    &kp SEMICOLON
  &kp Z  &kp X  &kp C  &kp V          &kp B                          &kp N  &kp M  &kp COMMA  &kp DOT  &kp SQT
                       &kp BACKSPACE  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &mo 3
            >;
        };

        nav {
            bindings = <
  &kp N1        &kp N2        &kp N3            &kp N4          &kp N5                    &kp N6  &kp N7           &kp N8             &kp N9         &kp N0
  &kp LEFT_GUI  &kp LALT      &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none                     &none   &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_GUI
  &kp TAB       &kp CAPSLOCK  &none             &kp ESCAPE      &none                     &none   &kp ESCAPE       &none              &kp CAPSLOCK   &kp BACKSPACE
                                                &trans          &none   &trans    &trans  &none   &trans
            >;
        };

        sym {
            bindings = <
  &none          &kp LT                &kp EQUAL  &kp GT                 &kp GRAVE                    &kp CARET  &kp LBKT        &kp UNDER      &kp RBKT         &none
  &kp BACKSLASH  &kp LEFT_PARENTHESIS  &kp MINUS  &kp RIGHT_PARENTHESIS  &kp PLUS                     &kp PRCNT  &kp LEFT_BRACE  &kp SEMICOLON  &kp RIGHT_BRACE  &kp EXCLAMATION
  &kp HASH       &kp STAR              &kp COLON  &kp FSLH               &none                        &none      &kp PIPE        &kp TILDE      &kp AMPS         &kp DLLR
                                                  &trans                 &none      &trans    &trans  &trans     &trans
            >;
        };

        adj {
            bindings = <
  &none  &kp F1  &kp F2   &kp F3   &kp F4                     &none   &none           &kp UP_ARROW    &none            &msc SCRL_UP
  &none  &kp F5  &kp F6   &kp F7   &kp F8                     &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &msc SCRL_DOWN
  &none  &kp F9  &kp F10  &kp F11  &kp F12                    &none   &none           &none           &msc SCRL_LEFT   &msc SCRL_RIGHT
                          &trans   &trans   &trans    &trans  &trans  &trans
            >;
        };
    };
};
